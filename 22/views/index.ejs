<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-F3w7mX95PdgyTmZZMECAngseQB83DfGTowi0iMjiWaeVhAn4FJkqJByhZMI3AhiU" crossorigin="anonymous">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <title>Data Types</title>
  <style>
    .input-date {
      width: 200px;
    }

    .input-checkbox-date {
      align-self: flex-start;
    }

    thead {
      border-top: 1px solid #dee2e6;
      border-bottom: 1px solid #dee2e6;
    }
  </style>
</head>

<body>
  <div class="container">
    <div class="container title-container">
      <h1>BREAD (Browse, Read, Edit, Add, Delete)</h1>
    </div>
    <div class="container filter-container py-3">
      <h2>Filters</h2>

      <form id="form-filter" action="" method="get">
        <input type="hidden" value="1" id="pagefilter" class="form-control">

        <div class="row mb-3 align-items-center justify-content-between">
          <div class="col-auto">
            <input type="checkbox" class="form-check-input" id="_idcheck">
            <label class="form-check-label" for="_idcheck">ID</label>
          </div>
          <div class="col-auto w-75">
            <input type="text" id="_id" class="form-control" placeholder="ID">
          </div>
        </div>

        <div class="row mb-3 align-items-center justify-content-between">
          <div class="col-auto">
            <input type="checkbox" class="form-check-input" id="stringcheck">
            <label class="form-check-label" for="stringcheck">String</label>
          </div>
          <div class="col-auto w-75">
            <input type="text" id="string" class="form-control" placeholder="String">
          </div>
        </div>

        <div class="row mb-3 align-items-center justify-content-between">
          <div class="col-auto">
            <input type="checkbox" class="form-check-input" id="integercheck">
            <label class="form-check-label" for="integercheck">Integer</label>
          </div>
          <div class="col-auto w-75">
            <input type="number" id="integer" class="form-control" placeholder="Integer">
          </div>
        </div>

        <div class="row mb-3 align-items-center justify-content-between">
          <div class="col-auto">
            <input type="checkbox" class="form-check-input" id="floatcheck">
            <label class="form-check-label" for="floatcheck">Float</label>
          </div>
          <div class="col-auto w-75">
            <input type="number" id="float" class="form-control" placeholder="Float" step="any">
          </div>
        </div>

        <div class="row mb-3 align-items-center justify-content-between">
          <div class="col-auto input-checkbox-date pt-2">
            <input type="checkbox" class="form-check-input" id="datecheck">
            <label class="form-check-label" for="datecheck">Date</label>
          </div>
          <div class="col-auto input-date-container w-75">
            <input type="date" name="startdate" id="startdate" class="form-control input-date">
            <div>to</div>
            <input type="date" name="enddate" id="enddate" class="form-control input-date">
          </div>
        </div>

        <div class="row mb-3 align-items-center justify-content-between">
          <div class="col-auto">
            <input type="checkbox" class="form-check-input" id="booleancheck">
            <label class="form-check-label" for="booleancheck">Boolean</label>
          </div>
          <div class="col-auto w-75">
            <select id="boolean" name="boolean" class="form-select" aria-label="Default select example">
              <option value="" disabled selected hidden>Choose the boolean ...</option>
              <option value="true">True</option>
              <option value="false">False</option>
            </select>
          </div>
        </div>

        <button class="btn btn-primary" type="submit">Search</button>
      </form>
    </div>

    <div class="container table-container">
      <table id="table-types" class="table table-striped table-hover">
        <thead>
          <tr>
            <th>ID</th>
            <th>String</th>
            <th>Integer</th>
            <th>Float</th>
            <th>Date</th>
            <th>Boolean</th>
            <th>Actions</th>
          </tr>
        </thead>

        <tbody>

        </tbody>
      </table>

      <nav aria-label="...">
        <ul id="pagination-types" class="pagination">

        </ul>
      </nav>

      <a href="/types/add" class="btn btn-primary" role="button">Add</a>
    </div>
  </div>

  <script>
    $(document).ready(function() {
      loadData()

      $('#table-types tbody').on('click', '.btn-delete', function() {
        deleteData($(this).attr('iditem'))
      })

      $('#form-filter').submit(function(event) {
        event.preventDefault()
        let filters = [];

        let pageFilter = $("#pagefilter").val()
        let _id = $("#_id").val()
        let string = $("#string").val()
        let integer = $("#integer").val()
        let float = $("#float").val()
        let startdate = $("#startdate").val()
        let enddate = $("#enddate").val()
        let boolean = $("#boolean").val()

        let _idcheck = $('#_idcheck').is(":checked")
        let stringcheck = $("#stringcheck").is(":checked")
        let integercheck = $("#integercheck").is(":checked")
        let floatcheck = $("#floatcheck").is(":checked")
        let datecheck = $("#datecheck").is(":checked")
        let booleancheck = $("#booleancheck").is(":checked")


        if (_id && _idcheck) {
          filters.push({
            name: "_id",
            value: _id
          });
        }
        if (string && stringcheck) {
          filters.push({
            name: "string",
            value: string
          });
        }
        if (integer && integercheck) {
          filters.push({
            name: "integer",
            value: Number(integer)
          });
        }
        if (float && floatcheck) {
          filters.push({
            name: "float",
            value: parseFloat(float)
          });
        }
        if (boolean && booleancheck) {
          filters.push({
            name: "boolean",
            value: boolean == "true" ? true : false,
          });
        }
        if (startdate && datecheck) {
          filters.push({
            name: "startdate",
            value: startdate
          });
        }
        if (enddate && datecheck) {
          filters.push({
            name: "enddate",
            value: enddate
          });
        }

        let i = 0;
        let filterParams = ""
        if (filters.length > 0) {
          for (; i < filters.length; i++) {
            filterParams += `&${filters[i].name}=${filters[i].value}`
          }
        }

        filterParams = filterParams.replace("&", "?")
        let param = {
          pageNext: 1,
          filter: filterParams
        }
        loadData(param)
      })
    })

    function changePage(pageNext) {
      var stringparam = $("#changepage").attr('data-param')

      let filterParams = stringparam === 'undefined' ? "" : stringparam
      let filterArr = filterParams.split("&")
      let filteredParam = filterArr.filter(filterElement => {
        return (!filterElement.startsWith("page"))
      });
      filterParams = filteredParam.join("&");
      filterParams = filterParams ? "?" + filterParams : ""

      let param = {
        pageNext,
        filter: filterParams
      }
      loadData(param)
      return false
    }

    const loadData = (param) => {
      let filter = `${param?.filter ? param?.filter : ""}`
      let page = `${param?.pageNext ? "&page=" + param.pageNext : ""}`
      let sortBy = `${param?.sortBy ? "&sort=" + param?.sortBy : ""}`
      let sortOrder = `${param?.sortOrder ? "&order=" + param?.sortOrder : ""}`

      let allQueryParams = filter + page + sortBy + sortOrder
      allQueryParams = allQueryParams.replace(/\?/g, "&")
      allQueryParams = allQueryParams.replace("&", "?")

      let url = `http://localhost:3000/types${allQueryParams}`

      $.ajax({
        url
      }).done(function(data) {
        const options = {
          year: "numeric",
          month: "long",
          day: "numeric"
        };

        let htmlTbody = ""
        data.items.forEach(item => {
          let newDate = new Date(item.date_type);
          let formatedDate = newDate.toLocaleDateString("id-ID", options);

          htmlTbody += `
            <tr>
              <td>${item._id}</td>
              <td>${item.string_type}</td>
              <td>${item.integer_type}</td>
              <td>${item.float_type}</td>
              <td>${item.date_type ? formatedDate : "kosong" }</td>
              <td>${item.boolean_type}</td>
              <td>
                <a href="/types/edit/${item._id}" class="btn btn-success" role="button">Edit</a>
                <button type="button" class="btn btn-danger btn-delete" iditem="${item._id}">Delete</button>
              </td>
            </tr>
            `
        });

        let htmlPagination = ""
        htmlPagination += `
          <li class="page-item ${data.pagination.currentPage == 1 || !data.pagination.currentPage ? "disabled" : ""}">
            <a onclick="return changePage(${data.pagination.currentPage - 1})" class="page-link" href="${ formatPage(data.filters, data.pagination.currentPage - 1, data.queryParams)}">Previous</a>
          </li>
        `
        for (let i = 1; i < data.pagination.totalPage + 1; i++) {
          htmlPagination += `
            <li class="page-item ${ data.pagination.currentPage == i ? "active" : ""}" aria-current="page">
              <a id="changepage" data-param="${data.stringparam}" onclick="return changePage(${i})" class="page-link" href="${formatPage(data.filters, i, data.queryParams)}">${i}</a>
            </li>
            `
        }
        htmlPagination += `
          <li class="page-item ${ data.pagination.currentPage == data.pagination.totalPage ? "disabled" : ""}"">
            <a onclick="return changePage(${data.pagination.currentPage + 1})" class="page-link" href="${ formatPage(data.filters, data.pagination.currentPage + 1, data.queryParams)}">Next</a>
          </li>
        `

        let htmlThead = ""
        htmlThead += `
          <tr>
            <th onclick="sortTable('_id,${data.order},${data.stringparam},${data.pagination.currentPage}')">ID <i class="fa fa-sort" style="font-size:12px; cursor: pointer;"></i></th>
            <th onclick="sortTable('string_type,${data.order},${data.stringparam},${data.pagination.currentPage}')">String <i class="fa fa-sort" style="font-size:12px; cursor: pointer;"></i></th>
            <th onclick="sortTable('integer_type,${data.order},${data.stringparam},${data.pagination.currentPage}')">Integer <i class="fa fa-sort" style="font-size:12px; cursor: pointer;"></i></th>
            <th onclick="sortTable('float_type,${data.order},${data.stringparam},${data.pagination.currentPage}')">Float <i class="fa fa-sort" style="font-size:12px; cursor: pointer;"></i></th>
            <th onclick="sortTable('date_type,${data.order},${data.stringparam},${data.pagination.currentPage}')">Date <i class="fa fa-sort" style="font-size:12px; cursor: pointer;"></i></th>
            <th onclick="sortTable('boolean_type,${data.order},${data.stringparam},${data.pagination.currentPage}')">Boolean <i class="fa fa-sort" style="font-size:12px; cursor: pointer;"></i></th>
            <th onclick="sortTable('actions_type,${data.order},${data.stringparam},${data.pagination.currentPage}')">Actions <i class="fa fa-sort" style="font-size:12px; cursor: pointer;"></i></th>
          </tr>
        `

        $('#table-types tbody').html(htmlTbody)
        $('#table-types thead').html(htmlThead)
        $('#pagination-types').html(htmlPagination)
      })
    }

    function sortTable(sortString) {
      let [sortBy, sortOrder, stringparam, pageNext] = sortString.split(",")
      switch (sortOrder) {
        case "asc":
          sortOrder = "desc"
          break;
        case "desc":
          sortOrder = ""
          break;
        default:
          sortOrder = "asc"
          break;
      }

      let filterParams = stringparam === 'undefined' ? "" : stringparam
      let filterArr = filterParams.split("&")
      let filteredParam = filterArr.filter(filterElement => {
        return (!filterElement.startsWith("page") && !filterElement.startsWith("sort") && !filterElement.startsWith("order"))
      });
      filterParams = filteredParam.join("&");
      filterParams = filterParams ? "?" + filterParams : ""

      let param = {
        pageNext,
        filter: filterParams,
        sortBy,
        sortOrder,
      }
      loadData(param)
    }

    const deleteData = id => {
      $.ajax({
        method: "DELETE",
        url: `http://localhost:3000/types/${id}`
      }).done(function() {
        loadData()
      }).fail(function(err) {
        alert(err)
      })
    }

    function formatPage(filters, i, queryParams) {
      if (filters.length == 0) {
        return `?page=${i}`;
      } else {
        arrQueryParams = queryParams.split("&");
        let formatedQueryParams = "";
        if (arrQueryParams[arrQueryParams.length - 1].search("page") != -1) {
          arrQueryParams.pop();
        }
        formatedQueryParams = arrQueryParams.join("&");
        return formatedQueryParams.concat(`&page=${i}`);
      }
    }
  </script>
</body>

</html>